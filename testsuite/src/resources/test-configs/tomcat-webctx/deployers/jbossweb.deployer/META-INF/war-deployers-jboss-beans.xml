<?xml version="1.0" encoding="UTF-8"?>

<!--
    Web application deployers
    $Id: war-deployers-jboss-beans.xml 107893 2010-08-30 19:44:31Z remy.maucherat@jboss.com $
-->
<deployment xmlns="urn:jboss:bean-deployer:2.0">

   <!-- WAR Structure -->
   <bean name="WARStructure" class="org.jboss.web.deployers.WARStructure">
       <property name="webInfLibFilter">
          <!-- We accept all .jar files in WEB-INF/lib -->
          <bean name="WebInfLibFilter" class="org.jboss.vfs.util.SuffixMatchFilter">
             <constructor><parameter class="java.lang.String">.jar</parameter></constructor>
          </bean>
       </property>
       <property name="contextInfoOrder">1000</property>
   </bean>
    
   <!-- web.xml parsing deployer -->
   <bean name="WebAppParsingDeployer" class="org.jboss.deployment.WebAppParsingDeployer">
      <property name="relativeOrder">2000</property>
   </bean>
   <bean name="JBossWebAppParsingDeployer" class="org.jboss.deployment.JBossWebAppParsingDeployer">
      <property name="relativeOrder">2001</property>
   </bean>
   <bean name="SharedJBossWebMetaDataDeployer" 
          class="org.jboss.web.deployers.SharedJBossWebMetaDataDeployer">
      <property name="webXml">${jboss.server.home.url}/deploy/jbossweb.sar/web.xml</property>
   </bean>
    
   <!-- 
        Injects default clustering metadata.
        
        FIXME. This is a temporary measure until we set up a jboss-web.xml 
        equivalent to conf/web.xml and  conf/standardjboss.xml and use it as the 
        source for all defaults. 
   -->
   <bean name="WebAppClusteringDefaultsDeployer" 
         class="org.jboss.web.tomcat.service.deployers.ClusteringDefaultsDeployer"> 
      
      <property name="relativeOrder">2002</property>
      
      <!--<property name="cacheSource">jboss.cache:service=TomcatClusteringCache</property>-->
      
      <property name="cacheName">jboss.cache:service=TomcatClusteringCache</property>
      
      <!--
      The following two properties define when sessions are replicated to 
      the other nodes.
      The default value, "instant", synchronously replicates changes
      to the other nodes at the end of requests. In this case, the 
      "SnapshotInterval" property is not used.
      The "interval" mode, in association with the "SnapshotInterval"
      property, indicates that modified sessions will only be replicated
      every "SnapshotInterval" milliseconds at most.   
      
      Note that this property is not in effect if the replication-granularity
      is set to FIELD. If it is FIELD, it will be per http request (that is, 
      "instant" mode.)
      -->
      <property name="snapshotMode">INSTANT</property>
      <property name="snapshotInterval">1000</property>
      
      <property name="replicationGranularity">SESSION</property>
      <property name="replicationTrigger">SET_AND_NON_PRIMITIVE_GET</property>
      
      <!--
      Whether by default to add special session handling to coordinate use 
      with mod_jk or other JK connector variants. 
      If a JK connector is used, you will need to set the JvmRoute inside 
      JBossWeb, e.g. configure,
        Engine name="jboss.web" jvmRoute="Node1" defaultHost="localhost" 
      in server.xml.
      
      This value can be configured per webapp in the webapp's jboss.xml.
      
      If not set, the default will be to add the special session handling
      if a jvmRoute is configured on the Engine. So, generally the only reason
      to configure this overall default is to set it to 'false' and thus force
      per webapp configuration.
      -->
      <!-- 
      <property name="useJK">false</property>
      -->
      
      <property name="useSessionPassivation">false</property>
      <property name="passivationMaxIdleTime">-1</property>  
      <property name="passivationMinIdleTime">-1</property>
      
   </bean>   
    
   <!-- The WebMetaData to service mbean deployer -->
   <bean name="WarDeployer" class="org.jboss.web.tomcat.service.deployers.TomcatDeployer">
      <constructor><parameter><inject bean="NamingJavaEEComponentInformer"/></parameter></constructor>
      <property name="mainDeployer"><inject bean="MainDeployer" /></property>        
      <property name="relativeOrder">2003</property>
      <!-- You can configure a set of authenticators keyed by http-auth method
      used. This will apply the same set of authenticators across all web
      applications. You can override the set of authenticators at the web
      application level by adding <authenticators> element to the respective
      jboss-web.xml
      -->      
      <property name="authenticators">
         <map class="java.util.Properties" keyClass="java.lang.String" valueClass="java.lang.String">
            <entry>
               <key>BASIC</key>
               <value>org.apache.catalina.authenticator.BasicAuthenticator</value>
            </entry>
            <entry>
               <key>CLIENT-CERT</key>
               <value>org.apache.catalina.authenticator.SSLAuthenticator</value>
            </entry>
            <entry>
               <key>DIGEST</key>
               <value>org.apache.catalina.authenticator.DigestAuthenticator</value>
            </entry>
            <entry>
               <key>FORM</key>
               <value>org.apache.catalina.authenticator.FormAuthenticator</value>
            </entry>
            <entry>
               <key>NONE</key>
               <value>org.apache.catalina.authenticator.NonLoginAuthenticator</value>
            </entry>
         </map>         
      </property>
        
      <!-- The JAAS security domain to use in the absense of an explicit
      security-domain specification in the war WEB-INF/jboss-web.xml
      -->
      <property name="defaultSecurityDomain">java:/jaas/other</property>
        
      <!-- Get the flag indicating if the normal Java2 parent first class
           loading model should be used over the servlet 2.3 web container first
           model.
      -->
      <property name="java2ClassLoadingCompliance">false</property>
      
      <property name="lenientEjbLink">true</property>
      
      <!--Flag to delete the Work Dir on Context Destroy -->
      <property name="deleteWorkDirOnContextDestroy">false</property>
        
      <!-- The class used as the deployment wrapper -->
      <property name="deploymentClass">org.jboss.web.tomcat.service.deployers.TomcatDeployment</property>
        
      <!-- The name of the request property under with the authenticated JAAS
           Subject is stored on successful authentication. If null or empty then
           the Subject will not be stored.
      -->
      <!--
      <property name="subjectAttributeName">j_subject</property>
      -->
        
      <property name="domain">jboss.web</property>
      <property name="securityManagerService">
         <inject bean="jboss.security:service=JaasSecurityManager" />
      </property>
        
      <!-- Specify PolicyRegistration-->
      <property name="policyRegistrationName">JBossSecurityPolicyRegistration</property>
      <!-- Specify a SecurityManagement Wrapper -->
      <property name="securityManagementName">JNDIBasedSecurityManagement</property>

      <!-- Specify a SecurityContext FQN class name -->
      <property name="securityContextClassName">org.jboss.security.plugins.JBossSecurityContext</property> 
      
   </bean>
    
</deployment>
