<?xml version="1.0" encoding="UTF-8"?>

<server>

   <!-- The custom JAAS login configuration that installs 
       a Configuration capable of dynamically updating the
       config settings
   -->
   <mbean code="org.jboss.security.auth.login.DynamicLoginConfig"
      name="jboss.security.tests:service=LoginConfig">
      <attribute name="AuthConfig">META-INF/srp-test-config.xml</attribute>
      <depends optional-attribute-name="LoginConfigService">
         jboss.security:service=XMLLoginConfig
      </depends>
      <depends optional-attribute-name="SecurityManagerService">
         jboss.security:service=JaasSecurityManager
      </depends>
   </mbean>

   <!-- The SRP service that sets up the RMI and JMX access to SRP -->
   <mbean code="org.jboss.security.srp.SRPService"
      name="jboss.security.tests:service=SRPService">
      <attribute name="VerifierSourceJndiName">srp-test/TestVerifierSource</attribute>
      <attribute name="JndiName">srp-test/SRPServerInterface</attribute>
      <attribute name="AuthenticationCacheJndiName">srp-test/AuthenticationCache</attribute>
      <attribute name="ServerPort">0</attribute>
      <depends>jboss.security.tests:service=PropertiesVerifierStore</depends>
   </mbean>

   <!-- Expose the SRP service interface via HTTP -->
   <mbean code="org.jboss.invocation.http.server.HttpProxyFactory"
      name="jboss.security.tests:service=SRP/HTTP">
      
     <!-- JBAS-8540
       NOTE: In order to handle both IPv4 and IPv6 address literals in URLs (see rfc2732), the value of
       the InvokerURL attribute is now constructed using the ServiceBindingManger, using the following format:
         <value-factory bean="ServiceBindingManager" method="getStringBinding">
           <parameter>servicename</parameter>
           <parameter>bindingname</parameter>
           <parameter>URL string</parameter>
           <parameter>actual host</parameter>
           <parameter>actual port</parameter>
         </value-factory>
       where 'URL string' is a string which may contain the substitution variables host, hostforurl and port.
       The value-factory element will return a string with the variables ${host}, ${hostforurl} and ${port}
       replaced with the values for host, hostforurl and port in the metadata for the ServiceBindingManager's
       entry for that servicename/bindingname pair.
       In order to ensure that the values 'actual host' and 'actual port' are used in the variable substitution,
       you must ensure that servicename and bindingname are unique to your bean deployment on the AS
       and do not match any existing ServiceBindingManager metadata entries. A safe approach is to use the
       following practice:
          servicename = the JMX ObjectName of your bean deployment
          bindingname = any identifier unique among all beans deployed with the same servicename
       If these values are not unique, you may instead pick up the host and port of an existing ServiceBindingManager
       metadata entry which is probably not what you want.
     -->          
      <attribute name="InvokerURL">
        <value-factory bean="ServiceBindingManager" method="getStringBinding">
          <parameter>jboss.security.tests:service=SRP/HTTP</parameter>
          <parameter>anynamehere</parameter>
          <parameter>http://${hostforurl}:${port}/invoker/JMXInvokerServlet</parameter>
          <parameter>${jboss.bind.address}</parameter>
          <parameter>8080</parameter>
        </value-factory>
      </attribute>
      <attribute name="InvokerName">jboss.security.tests:service=SRPService</attribute>
      <attribute name="ExportedInterface">org.jboss.security.srp.SRPRemoteServerInterface</attribute>
      <attribute name="JndiName">srp-test-http/SRPServerInterface</attribute>
   </mbean>

   <!-- Expose the SRP service interface via clustered HTTP -->
   <mbean code="org.jboss.invocation.http.server.HttpProxyFactoryHA"
      name="jboss.security.tests:service=SRP/HA-HTTP">
      <attribute name="PartitionName">DefaultPartition</attribute>
      <attribute name="InvokerName">jboss.security.tests:service=SRPService</attribute>
      <attribute name="ExportedInterface">org.jboss.security.srp.SRPRemoteServerInterface</attribute>
      <attribute name="JndiName">srp-test-http/SRPServerInterfaceHA</attribute>
      <attribute name="LoadBalancePolicy">org.jboss.ha.framework.interfaces.FirstAvailable</attribute>
      <attribute name="InvokerURL">
        <value-factory bean="ServiceBindingManager" method="getStringBinding">
          <parameter>jboss.security.tests:service=SRP/HA-HTTP</parameter>
          <parameter>anynamehere</parameter>
          <parameter>http://${hostforurl}:${port}/invoker/JMXInvokerHAServlet</parameter>
          <parameter>${jboss.bind.address}</parameter>
          <parameter>8080</parameter>
        </value-factory>
      </attribute>

      <attribute name="ClientInterceptors">
         <interceptors>
            <interceptor>org.jboss.invocation.http.interfaces.ClientMethodInterceptorHA</interceptor>
            <interceptor>org.jboss.proxy.SecurityInterceptor</interceptor>
            <!--<interceptor>org.jboss.naming.interceptors.ExceptionInterceptor</interceptor> -->
            <interceptor>org.jboss.invocation.InvokerInterceptor</interceptor>
         </interceptors>
      </attribute>
   </mbean>

   <!-- The SRP store handler service -->
   <mbean code="org.jboss.test.security.service.PropertiesVerifierStore"
      name="jboss.security.tests:service=PropertiesVerifierStore">
      <attribute name="JndiName">srp-test/TestVerifierSource</attribute>
   </mbean>

   <mbean code="org.jboss.test.security.service.SRPCacheTest"
      name="jboss.security.tests:service=SRPCacheTest" xmbean-dd="">
      <xmbean>
         <description>An xmbean for testing SRP session validity</description>
         <descriptors>
            <interceptors>
               <interceptor code="org.jboss.test.security.interceptors.SRPCacheInterceptor"
                  authenticationCacheJndiName="srp-test/AuthenticationCache"/>
               <interceptor code="org.jboss.mx.interceptor.PersistenceInterceptor2"/>
               <interceptor code="org.jboss.mx.interceptor.ModelMBeanInterceptor"/>
               <interceptor code="org.jboss.mx.interceptor.ObjectReferenceInterceptor"/>
            </interceptors>
         </descriptors>

         <operation>
            <description>The start lifecycle operation</description>
            <name>start</name>
         </operation>
         <operation>
            <description>The stop lifecycle operation</description>
            <name>stop</name>
         </operation>

         <operation>
            <description></description>
            <name>testSession</name>
            <parameter>
               <description>The SRPSession principal</description>
               <name>principal</name>
               <type>java.security.Principal</type>
            </parameter>
            <parameter>
               <description>The SRPSession session key</description>
               <name>clientChallenge</name>
               <type>[B</type>
            </parameter>
            <return-type>int</return-type>
         </operation>
      </xmbean>
   </mbean>
</server>
